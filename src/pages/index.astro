---
import { getCollection } from "astro:content";
import BlogCard from "../components/BlogCard.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { 
  getFeaturedBlogPosts, 
  getFeaturedProjects, 
  getContentStats, 
  getAllTags,
  getAllSnippets,
  getAllTILPosts 
} from "../utils/content";

// Get featured content from all collections
const featuredPosts = await getFeaturedBlogPosts(3);
const featuredProjects = await getFeaturedProjects(2);
const recentSnippets = await getAllSnippets();
const recentTIL = await getAllTILPosts();
const contentStats = await getContentStats();
const popularTags = await getAllTags();

// Limit recent content
const latestSnippets = recentSnippets.slice(0, 2);
const latestTIL = recentTIL.slice(0, 2);
const topTags = popularTags.slice(0, 8);
---

<BaseLayout title="Home">
  <section class="hero">
    <img src="/avatar.jpg" alt="Jing Li Avatar" class="avatar" />
    <h1>Hi, Iâ€™m <strong>Jing Li</strong> ðŸ‘‹</h1>
    <p class="intro">
      Welcome to <strong>JLog</strong> â€” my digital logbook where I share<br />
      what I <em>build</em>, what I <em>learn</em>, and what I <em>think</em>.
    </p>

    <p class="actions">
      â†’ <a href="/blog">Read the blog</a> ãƒ»
      <a href="/projects">See my projects</a> ãƒ»
      <a href="/snippets">Code snippets</a> ãƒ»
      <a href="/til">Today I learned</a>
    </p>
  </section>

  <!-- Content Stats -->
  <section class="content-stats">
    <div class="stats-grid">
      <div class="stat-item">
        <span class="stat-number">{contentStats.blogPosts}</span>
        <span class="stat-label">Blog Posts</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">{contentStats.projects}</span>
        <span class="stat-label">Projects</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">{contentStats.snippets}</span>
        <span class="stat-label">Code Snippets</span>
      </div>
      <div class="stat-item">
        <span class="stat-number">{contentStats.tilPosts}</span>
        <span class="stat-label">TIL Posts</span>
      </div>
    </div>
  </section>

  <section class="popular-tags">
    <h2>Popular Tags</h2>
    <div class="tag-list">
      {
        topTags.map((tag) => (
          <a href={`/tags/${tag}`} class="tag">
            {tag}
          </a>
        ))
      }
    </div>
  </section>

  <section class="featured-posts">
    <h2>âœ¨ Featured Posts</h2>
    <div class="post-grid">
      {
        featuredPosts.map((post) => (
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            date={post.data.pubDate}
            href={`/blog/${post.slug}`}
          />
        ))
      }
    </div>
  </section>

  <!-- Recent Snippets -->
  {latestSnippets.length > 0 && (
    <section class="recent-content">
      <h2>ðŸ”§ Latest Code Snippets</h2>
      <div class="content-grid">
        {latestSnippets.map((snippet) => (
          <div class="content-card">
            <h3><a href={`/snippets/${snippet.slug}`}>{snippet.data.title}</a></h3>
            <p>{snippet.data.description}</p>
            <div class="content-meta">
              <span class="language">{snippet.data.language}</span>
              <span class="difficulty">{snippet.data.difficulty}</span>
            </div>
          </div>
        ))}
      </div>
    </section>
  )}

  <!-- Recent TIL -->
  {latestTIL.length > 0 && (
    <section class="recent-content">
      <h2>ðŸ’¡ Today I Learned</h2>
      <div class="content-grid">
        {latestTIL.map((til) => (
          <div class="content-card">
            <h3><a href={`/til/${til.slug}`}>{til.data.title}</a></h3>
            <p>{til.data.description}</p>
            <div class="content-meta">
              <span class="category">{til.data.category}</span>
              <span class="difficulty">{til.data.difficulty}</span>
            </div>
          </div>
        ))}
      </div>
    </section>
  )}

  <!-- Featured Projects -->
  {featuredProjects.length > 0 && (
    <section class="recent-content">
      <h2>ðŸš€ Featured Projects</h2>
      <div class="content-grid">
        {featuredProjects.map((project) => (
          <div class="content-card">
            <h3><a href={`/projects/${project.slug}`}>{project.data.title}</a></h3>
            <p>{project.data.description}</p>
            <div class="content-meta">
              <span class="tech">{project.data.tech.slice(0, 2).join(', ')}</span>
              <span class="status">{project.data.status}</span>
            </div>
          </div>
        ))}
      </div>
    </section>
  )}

  <style>
    .hero {
      text-align: center;
      padding: 4rem 1rem 2rem;
      max-width: 720px;
      margin: 0 auto;
    }

    .avatar {
      width: 88px;
      height: 88px;
      border-radius: 50%;
      object-fit: cover;
      margin-bottom: 1rem;
      border: 2px solid var(--avatar-border);
    }

    h1 {
      font-size: 2rem;
      margin-bottom: 0.5rem;
      color: var(--text);
    }

    .intro {
      font-size: 1.05rem;
      color: var(--subtle-text);
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }

    .actions {
      font-size: 0.95rem;
      color: var(--meta-text);
    }

    .actions a {
      color: var(--tag-hover-bg);
      text-decoration: none;
    }

    .actions a:hover {
      text-decoration: underline;
    }

    .featured-posts {
      max-width: 720px;
      margin: 3rem auto 4rem;
      padding: 0 1rem;
    }

    .featured-posts h2 {
      font-size: 1.3rem;
      margin-bottom: 1rem;
      color: var(--text);
    }

    .post-grid {
      display: grid;
      gap: 1rem;
    }

    .popular-tags {
      max-width: 720px;
      margin: 3rem auto 4rem;
      padding: 0 1rem;
      text-align: center;
    }

    .popular-tags h2 {
      font-size: 1.2rem;
      margin-bottom: 0.75rem;
      color: var(--text);
    }

    .tag-list {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 0.6rem;
    }

    .tag {
      background: var(--tag-bg);
      padding: 0.35rem 0.75rem;
      font-size: 0.85rem;
      border-radius: 999px;
      text-decoration: none;
      color: var(--tag-color);
      transition:
        background 0.2s ease,
        color 0.2s ease;
    }

    .tag:hover {
      background: var(--tag-hover-bg);
      color: var(--tag-hover-color);
    }

    .count {
      font-size: 0.75rem;
      margin-left: 0.3rem;
      color: var(--meta-text);
    }

    /* Content Stats */
    .content-stats {
      max-width: 720px;
      margin: 2rem auto;
      padding: 0 1rem;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
      gap: 1rem;
      text-align: center;
    }

    .stat-item {
      background: var(--bg-secondary);
      padding: 1.5rem 1rem;
      border-radius: var(--radius-md);
      transition: transform 0.2s ease;
    }

    .stat-item:hover {
      transform: translateY(-2px);
    }

    .stat-number {
      display: block;
      font-size: 2rem;
      font-weight: bold;
      color: var(--color-accent);
      line-height: 1;
    }

    .stat-label {
      display: block;
      font-size: 0.85rem;
      color: var(--text-secondary);
      margin-top: 0.5rem;
    }

    /* Recent Content Sections */
    .recent-content {
      max-width: 720px;
      margin: 3rem auto;
      padding: 0 1rem;
    }

    .recent-content h2 {
      font-size: 1.3rem;
      margin-bottom: 1rem;
      color: var(--text-primary);
    }

    .content-grid {
      display: grid;
      gap: 1rem;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    }

    .content-card {
      background: var(--bg-secondary);
      padding: 1.5rem;
      border-radius: var(--radius-md);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .content-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .content-card h3 {
      margin: 0 0 0.5rem 0;
      font-size: 1.1rem;
    }

    .content-card h3 a {
      color: var(--text-primary);
      text-decoration: none;
    }

    .content-card h3 a:hover {
      color: var(--color-accent);
    }

    .content-card p {
      color: var(--text-secondary);
      font-size: 0.9rem;
      line-height: 1.5;
      margin-bottom: 1rem;
    }

    .content-meta {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }

    .content-meta span {
      background: var(--tag-bg);
      color: var(--tag-color);
      padding: 0.25rem 0.5rem;
      border-radius: var(--radius-sm);
      font-size: 0.75rem;
      text-transform: capitalize;
    }

    .language {
      background: var(--color-accent) !important;
      color: white !important;
    }

    .difficulty {
      background: var(--color-warning) !important;
      color: white !important;
    }

    .status {
      background: var(--color-success) !important;
      color: white !important;
    }
  </style>
</BaseLayout>
